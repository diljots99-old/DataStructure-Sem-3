{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16  1  \cb3\cf4 /*
\par \cb1\cf0\ul0\i0\b0  2  \cb3\cf4 *Stack Push and pop
\par \cb1\cf0\ul0\i0\b0  3  \cb3\cf4 */
\par \cb1\cf0\ul0\i0\b0  4  \cb3\cf13 #include "stdio.h"
\par \cb1\cf0\ul0\i0\b0  5  \cb3\cf13 #include "conio.h"
\par \cb1\cf0\ul0\i0\b0  6  \cb3\cf13 #define MAX 5
\par \cb1\cf0\ul0\i0\b0  7  \cb3\cf11\b int \b0\cb1\cf0 top\cb3\cf22 =-\cb3\cf9 1 \cb3\cf22 ,\cb1\cf0 stack\cb3\cf22 [\cb1\cf0 MAX\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  8  \cb3\cf11\b void \b0\cb1\cf0 push\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  9  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 10      \cb3\cf11\b int \b0\cb1\cf0 val\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 11      \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 top\cb3\cf22 ==\cb1\cf0 MAX\cb3\cf22 -\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 12      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 13          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nstack is full"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 14      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 15      \cb3\cf11\b else
\par \cb1\cf0\ul0\i0\b0 16      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 17          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nEnter Element to push"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 18          \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 val\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 19          \cb1\cf0 top\cb3\cf22 =\cb1\cf0 top\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 20          \cb1\cf0 stack\cb3\cf22 [\cb1\cf0 top\cb3\cf22 ]=\cb1\cf0 val\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 21      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 22  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 23  \cb3\cf11\b int \b0\cb1\cf0 pop\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0 24  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 25      \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 top\cb3\cf22 ==-\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 26      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 27          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nStack is empty"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 28      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 29      \cb3\cf11\b else
\par \cb1\cf0\ul0\i0\b0 30      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 31          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nPoped Element is %d"\cb3\cf22 ,\cb1\cf0 stack\cb3\cf22 [\cb1\cf0 top\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0 32          \cb3\cf11\b return \b0\cb1\cf0 stack\cb3\cf22 [\cb1\cf0 top\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 33          \cb1\cf0 top\cb3\cf22 =\cb1\cf0 top\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 34      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 35  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 36  \cb3\cf11\b void \b0\cb1\cf0 display\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0 37  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 38      \cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 39      \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 top\cb3\cf22 ==-\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 40      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 41          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nStack is empty"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 42      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 43       \cb3\cf11\b else
\par \cb1\cf0\ul0\i0\b0 44      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 45          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nStack is .....\\n]"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 46          \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 j \cb3\cf22 =\cb3\cf9 1\cb3\cf22 ;\cb1\cf0 j\cb3\cf22 >=\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 j\cb3\cf22 --)
\par \cb1\cf0\ul0\i0\b0 47          \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 48              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d "\cb3\cf22 ,\cb1\cf0 stack\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0 49          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 50      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 51  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 52  \cb3\cf11\b int \b0\cb1\cf0 main\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0 53  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 54      \cb3\cf11\b int \b0\cb1\cf0 ch\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 55      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nSTACK PUSH & POP \\n1.Push\\n2.Pop\\n3.Display\\n4.Exit\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 56      \cb3\cf11\b while\b0\cb3\cf22 (\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 57      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 58          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "Enter your choice (1-4): " \cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 59          \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 ch\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 60          \cb3\cf11\b switch\b0\cb3\cf22 (\cb1\cf0 ch\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 61          \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 62              \cb3\cf11\b case \b0\cb3\cf9 1\cb3\cf22 :\cb1\cf0 push\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 63                  \cb3\cf11\b break\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 64              \cb3\cf11\b case \b0\cb3\cf9 2\cb3\cf22 :\cb1\cf0 pop\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 65                  \cb3\cf11\b break\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 66              \cb3\cf11\b case \b0\cb3\cf9 3\cb3\cf22 :\cb1\cf0 display\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 67                  \cb3\cf11\b break\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 68              \cb3\cf11\b case \b0\cb3\cf9 4\cb3\cf22 :\cb1\cf0 exit\cb3\cf22 (\cb3\cf9 0\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 69                  \cb3\cf11\b break\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 70              \cb3\cf11\b default\b0\cb3\cf22 :\cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "Wrong Choice\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 71                  \cb3\cf11\b break\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 72  
\par \cb1\cf0\ul0\i0\b0 73          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 74      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 75  \cb3\cf22 \}
\par }